# Use postgres/example user/password credentials
version: '3.1'

volumes:
  atlasdb-postgres-data:
    name: atlasdb-postgres-data

services:

  db1:
    container_name: omop1
    image: postgres:16-bullseye
    shm_size: '4gb'
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: omopcdm_synthetic
    volumes:
      - ./postgres-data1:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
      - ./data/NKR_IKNL_breast_syntheticdata.csv:/mnt/data.csv
    ports:
      - "5432:5432"

  # db2:
  #   container_name: omop2
  #   image: postgres:16-bullseye
  #   shm_size: '4gb'
  #   restart: always
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: omopcdm_synthetic
  #   volumes:
  #     - ./postgres-data:/var/lib/postgresql/data
  #     - ./init:/docker-entrypoint-initdb.d
  #     - ./data/alternative.csv:/mnt/data.csv
  #   ports:
  #     - "5433:5432"

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    volumes:
      - ./pgadmin-data2:/var/lib/pgadmin
      - ./default-server.json:/pgadmin4/servers.json
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

  ohdsi-webapi-from-image:
    image: ohdsi/webapi:latest
    extends:
      file: ohdsi-webapi.yaml
      service: ohdsi-webapi

  ohdsi-atlas-from-image:
    image: ohdsi/atlas:latest
    extends:
      file: ohdsi-atlas.yaml
      service: ohdsi-atlas

  broadsea-atlasdb:
    image: ohdsi/broadsea-atlasdb:2.0.0
    container_name: broadsea-atlasdb
    platform: "linux/amd64"
    cpus: 2
    mem_limit: "2G"
    environment:
      - POSTGRES_PASSWORD=mypass
    ports:
      - "5432:5432"
    volumes:
     - atlasdb-postgres-data:/var/lib/postgresql/data
    #  - ./100_populate_source_source_daimon.sql:/docker-entrypoint-initdb.d/100_populate_source_source_daimon.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10


